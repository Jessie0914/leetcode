package bitmanipulation;

/**
 * @ClassName Solution190
 * @Description 190.颠倒二进制位
 * @Author shishi
 * @Date 2019/7/1 16:59
 **/

/**
 * 题目要求：
 * 颠倒给定的 32 位无符号整数的二进制位
 *
 * 示例：
 * 输入: 00000010100101000001111010011100
 * 输出: 00111001011110000010100101000000
 * 解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
 *       因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000
 *
 * 输入：11111111111111111111111111111101
 * 输出：10111111111111111111111111111111
 * 解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
 *       因此返回 3221225471 其二进制表示形式为 10101111110010110010011101101001。
 */
public class Solution190 {
    // 有直接的函数可以调用 Integer.reverse()
    public static int reverseBits(int n) {
        return Integer.reverse(n);
    }
}
